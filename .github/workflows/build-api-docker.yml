name: Build API Docker Image
concurrency:
  group: ${{ github.workflow }}
  cancel-in-progress: false

on:
  workflow_dispatch:
    inputs:
      tag:
        description: "Docker image tag (latest or stable)"
        required: false
        default: "latest"

jobs:
  test-api:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.14"

      - name: Generate cache keys
        id: cache_keys
        working-directory: api
        run: |
          echo "python_dependencies_cache_key=CI-test-and-python-dependencies-$(sha256sum requirements.txt | cut -d' ' -f1)" >> $GITHUB_ENV

      - name: Restore cached python dependencies
        id: cache_dependencies
        uses: actions/cache/restore@v4
        with:
          path: |
            ~/.cache/pip
            ~/api/.pytest_cache
          key: ${{ env.python_dependencies_cache_key }}

      - name: Install dependencies
        working-directory: api
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run tests
        working-directory: api
        run: |
          pytest

      - name: Cache python dependencies
        if: steps.cache_dependencies.outputs.cache-hit != 'true'
        uses: actions/cache/save@v4
        with:
          path: |
            ~/.cache/pip
            ~/api/.pytest_cache
          key: ${{ env.python_dependencies_cache_key }}

  build-api-image:
    runs-on: ubuntu-latest
    timeout-minutes: 20
    needs: test-api
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push multi-arch Docker image
        uses: docker/build-push-action@v6
        with:
          context: ./api
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/train-dashboard-api:${{ github.event.inputs.tag || 'latest' }}
          platforms: linux/amd64,linux/arm64
          cache-from: type=gha
          cache-to: type=gha,mode=max
